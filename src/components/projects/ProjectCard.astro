---
import { tagData } from "@/config.ts";
import type { Project } from "@/types";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

type Props = Project & { idx: number };
const { title, description, image, link, tags, idx } = Astro.props;
const reverse = idx % 2 == 0;
---

<article
    class:list={[
        "flex flex-col-reverse xl:flex-row xl:max-w-[1600px] justify-center gap-8 items-center",
        {
            "xl:flex-row-reverse": reverse,
        },
    ]}
>
    <figure class="xl:w-1/2">
        <div
            class="mockup-browser bg-base-300 border-2 border-neutral shadow-2xl xl:max-w-[580px] hover:shadow-2xl transition-shadow duration-500"
        >
            <div class="hidden xl:mockup-browser-toolbar">
                <div class="input">
                    <a
                        target="_blank"
                        href={link}
                        class="px-2 rounded-sm hover:bg-[#b185db] bg-[#7251b5] text-white transition-colors"
                    >{link}</a>
                </div>
            </div>
            <a href={link} target="_blank">
                <div
                    class="bg-base-200 flex justify-center overflow-hidden group"
                >
                    <Image
                        class="object-cover transform transition-transform duration-500 group-hover:scale-105"
                        src={image}
                        alt={title}
                    />
                </div>
            </a>
        </div>
    </figure>

    <div class="xl:w-1/2 flex-col-reverse xl:max-w-[80ch]">
        <div class="flex-1">
            <h2 class="card-title text-2xl text-primary my-2">
                {title}
            </h2>
            <p class="text-left pb-4 text-balance">{description}</p>
            <div class="flex flex-row gap-2 flex-wrap">
                {
                    tags.map((tag) => (
                        <span class="badge badge-neutral gap-2">
                            <Icon name={tagData[tag].icon} />
                            {tagData[tag].name}
                        </span>
                    ))
                }
            </div>
        </div>
    </div>
</article>
